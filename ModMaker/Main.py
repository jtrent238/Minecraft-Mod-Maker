
import os;
import urllib.request;
import zipfile;
import subprocess;
import tkinter as tk;
from shutil import copy;

print("==========================================================================")
print("========== Minecraft Mod Creator By jtrent238 | Version 1.0.0.0 ==========")
print("==========================================================================")

language = 'en_US'

# ask_language = input('What language do you want to use? [en-US]: ')

# language = ask_language

if language in ['af']: 	print('language not supported!')
if language in ['af-NA']: 	print('language not supported!')
if language in ['af-ZA']: 	print('language not supported!')
if language in ['agq']: 	print('language not supported!')
if language in ['agq-CM']: 	print('language not supported!')
if language in ['ak']: 	print('language not supported!')
if language in ['ak-GH']: 	print('language not supported!')
if language in ['am']: 	print('language not supported!')
if language in ['am-ET']: 	print('language not supported!')
if language in ['ar']: 	print('language not supported!')
if language in ['ar-001']: 	print('language not supported!')
if language in ['ar-AE']: 	print('language not supported!')
if language in ['ar-BH']: 	print('language not supported!')
if language in ['ar-DJ']: 	print('language not supported!')
if language in ['ar-DZ']: 	print('language not supported!')
if language in ['ar-EG']: 	print('language not supported!')
if language in ['ar-ER']: 	print('language not supported!')
if language in ['ar-EH']: 	print('language not supported!')
if language in ['ar-IL']: 	print('language not supported!')
if language in ['ar-IQ']: 	print('language not supported!')
if language in ['ar-JO']: 	print('language not supported!')
if language in ['ar-KM']: 	print('language not supported!')
if language in ['ar-KW']: 	print('language not supported!')
if language in ['ar-LB']: 	print('language not supported!')
if language in ['ar-LY']: 	print('language not supported!')
if language in ['ar-MA']: 	print('language not supported!')
if language in ['ar-MR']: 	print('language not supported!')
if language in ['ar-OM']: 	print('language not supported!')
if language in ['ar-PS']: 	print('language not supported!')
if language in ['ar-QA']: 	print('language not supported!')
if language in ['ar-SA']: 	print('language not supported!')
if language in ['ar-SD']: 	print('language not supported!')
if language in ['ar-SO']: 	print('language not supported!')
if language in ['ar-SS']: 	print('language not supported!')
if language in ['ar-SY']: 	print('language not supported!')
if language in ['ar-TD']: 	print('language not supported!')
if language in ['ar-TN']: 	print('language not supported!')
if language in ['ar-YE']: 	print('language not supported!')
if language in ['as']: 	print('language not supported!')
if language in ['as-IN']: 	print('language not supported!')
if language in ['asa']: 	print('language not supported!')
if language in ['asa-TZ']: 	print('language not supported!')
if language in ['ast']: 	print('language not supported!')
if language in ['ast-ES']: 	print('language not supported!')
if language in ['az']: 	print('language not supported!')
if language in ['az-Cyrl']: 	print('language not supported!')
if language in ['az-Cyrl-AZ']: 	print('language not supported!')
if language in ['az-Latn']: 	print('language not supported!')
if language in ['az-Latn-AZ']: 	print('language not supported!')
if language in ['bas']: 	print('language not supported!')
if language in ['bas-CM']: 	print('language not supported!')
if language in ['be']: 	print('language not supported!')
if language in ['be-BY']: 	print('language not supported!')
if language in ['bem']: 	print('language not supported!')
if language in ['bem-ZM']: 	print('language not supported!')
if language in ['bez']: 	print('language not supported!')
if language in ['bez-TZ']: 	print('language not supported!')
if language in ['bg']: 	print('language not supported!')
if language in ['bg-BG']: 	print('language not supported!')
if language in ['bm']: 	print('language not supported!')
if language in ['bm-ML']: 	print('language not supported!')
if language in ['bn']: 	print('language not supported!')
if language in ['bn-BD']: 	print('language not supported!')
if language in ['bn-IN']: 	print('language not supported!')
if language in ['bo']: 	print('language not supported!')
if language in ['bo-CN']: 	print('language not supported!')
if language in ['bo-IN']: 	print('language not supported!')
if language in ['br']: 	print('language not supported!')
if language in ['br-FR']: 	print('language not supported!')
if language in ['brx']: 	print('language not supported!')
if language in ['brx-IN']: 	print('language not supported!')
if language in ['bs']: 	print('language not supported!')
if language in ['bs-Cyrl']: 	print('language not supported!')
if language in ['bs-Cyrl-BA']: 	print('language not supported!')
if language in ['bs-Latn']: 	print('language not supported!')
if language in ['bs-Latn-BA']: 	print('language not supported!')
if language in ['ca']: 	print('language not supported!')
if language in ['ca-AD']: 	print('language not supported!')
if language in ['ca-ES']: 	print('language not supported!')
if language in ['ca-ES-VALENCIA']: 	print('language not supported!')
if language in ['ca-FR']: 	print('language not supported!')
if language in ['ca-IT']: 	print('language not supported!')
if language in ['ccp']: 	print('language not supported!')
if language in ['ccp-BD']: 	print('language not supported!')
if language in ['ccp-IN']: 	print('language not supported!')
if language in ['ce']: 	print('language not supported!')
if language in ['ce-RU']: 	print('language not supported!')
if language in ['cgg']: 	print('language not supported!')
if language in ['cgg-UG']: 	print('language not supported!')
if language in ['chr']: 	print('language not supported!')
if language in ['chr-US']: 	print('language not supported!')
if language in ['ckb']: 	print('language not supported!')
if language in ['ckb-IQ']: 	print('language not supported!')
if language in ['ckb-IR']: 	print('language not supported!')
if language in ['cs']: 	print('language not supported!')
if language in ['cs-CZ']: 	print('language not supported!')
if language in ['cu']: 	print('language not supported!')
if language in ['cu-RU']: 	print('language not supported!')
if language in ['cy']: 	print('language not supported!')
if language in ['cy-GB']: 	print('language not supported!')
if language in ['da']: 	print('language not supported!')
if language in ['da-DK']: 	print('language not supported!')
if language in ['da-GL']: 	print('language not supported!')
if language in ['dav']: 	print('language not supported!')
if language in ['dav-KE']: 	print('language not supported!')
if language in ['de']: 	print('language not supported!')
if language in ['de-AT']: 	print('language not supported!')
if language in ['de-BE']: 	print('language not supported!')
if language in ['de-CH']: 	print('language not supported!')
if language in ['de-DE']: 	print('language not supported!')
if language in ['de-IT']: 	print('language not supported!')
if language in ['de-LI']: 	print('language not supported!')
if language in ['de-LU']: 	print('language not supported!')
if language in ['dje']: 	print('language not supported!')
if language in ['dje-NE']: 	print('language not supported!')
if language in ['dsb']: 	print('language not supported!')
if language in ['dsb-DE']: 	print('language not supported!')
if language in ['dua']: 	print('language not supported!')
if language in ['dua-CM']: 	print('language not supported!')
if language in ['dyo']: 	print('language not supported!')
if language in ['dyo-SN']: 	print('language not supported!')
if language in ['dz']: 	print('language not supported!')
if language in ['dz-BT']: 	print('language not supported!')
if language in ['ebu']: 	print('language not supported!')
if language in ['ebu-KE']: 	print('language not supported!')
if language in ['ee']: 	print('language not supported!')
if language in ['ee-GH']: 	print('language not supported!')
if language in ['ee-TG']: 	print('language not supported!')
if language in ['el']: 	print('language not supported!')
if language in ['el-CY']: 	print('language not supported!')
if language in ['el-GR']: 	print('language not supported!')
if language in ['en']: 	print('language not supported!')
if language in ['en-001']: 	print('language not supported!')
if language in ['en-150']: 	print('language not supported!')
if language in ['en-AG']: 	print('language not supported!')
if language in ['en-AI']: 	print('language not supported!')
if language in ['en-AS']: 	print('language not supported!')
if language in ['en-AT']: 	print('language not supported!')
if language in ['en-AU']: 	print('language not supported!')
if language in ['en-BB']: 	print('language not supported!')
if language in ['en-BE']: 	print('language not supported!')
if language in ['en-BI']: 	print('language not supported!')
if language in ['en-BM']: 	print('language not supported!')
if language in ['en-BS']: 	print('language not supported!')
if language in ['en-BW']: 	print('language not supported!')
if language in ['en-BZ']: 	print('language not supported!')
if language in ['en-CA']: 	print('language not supported!')
if language in ['en-CC']: 	print('language not supported!')
if language in ['en-CH']: 	print('language not supported!')
if language in ['en-CK']: 	print('language not supported!')
if language in ['en-CM']: 	print('language not supported!')
if language in ['en-CX']: 	print('language not supported!')
if language in ['en-CY']: 	print('language not supported!')
if language in ['en-DE']: 	print('language not supported!')
if language in ['en-DG']: 	print('language not supported!')
if language in ['en-DK']: 	print('language not supported!')
if language in ['en-DM']: 	print('language not supported!')
if language in ['en-ER']: 	print('language not supported!')
if language in ['en-FI']: 	print('language not supported!')
if language in ['en-FJ']: 	print('language not supported!')
if language in ['en-FK']: 	print('language not supported!')
if language in ['en-FM']: 	print('language not supported!')
if language in ['en-GB']: 	print('language not supported!')
if language in ['en-GD']: 	print('language not supported!')
if language in ['en-GG']: 	print('language not supported!')
if language in ['en-GH']: 	print('language not supported!')
if language in ['en-GI']: 	print('language not supported!')
if language in ['en-GM']: 	print('language not supported!')
if language in ['en-GU']: 	print('language not supported!')
if language in ['en-GY']: 	print('language not supported!')
if language in ['en-HK']: 	print('language not supported!')
if language in ['en-IE']: 	print('language not supported!')
if language in ['en-IL']: 	print('language not supported!')
if language in ['en-IM']: 	print('language not supported!')
if language in ['en-IN']: 	print('language not supported!')
if language in ['en-IO']: 	print('language not supported!')
if language in ['en-JE']: 	print('language not supported!')
if language in ['en-JM']: 	print('language not supported!')
if language in ['en-KE']: 	print('language not supported!')
if language in ['en-KI']: 	print('language not supported!')
if language in ['en-KN']: 	print('language not supported!')
if language in ['en-KY']: 	print('language not supported!')
if language in ['en-LC']: 	print('language not supported!')
if language in ['en-LR']: 	print('language not supported!')
if language in ['en-LS']: 	print('language not supported!')
if language in ['en-MG']: 	print('language not supported!')
if language in ['en-MH']: 	print('language not supported!')
if language in ['en-MO']: 	print('language not supported!')
if language in ['en-MP']: 	print('language not supported!')
if language in ['en-MS']: 	print('language not supported!')
if language in ['en-MT']: 	print('language not supported!')
if language in ['en-MU']: 	print('language not supported!')
if language in ['en-MW']: 	print('language not supported!')
if language in ['en-MY']: 	print('language not supported!')
if language in ['en-NA']: 	print('language not supported!')
if language in ['en-NF']: 	print('language not supported!')
if language in ['en-NG']: 	print('language not supported!')
if language in ['en-NL']: 	print('language not supported!')
if language in ['en-NR']: 	print('language not supported!')
if language in ['en-NU']: 	print('language not supported!')
if language in ['en-NZ']: 	print('language not supported!')
if language in ['en-PG']: 	print('language not supported!')
if language in ['en-PH']: 	print('language not supported!')
if language in ['en-PK']: 	print('language not supported!')
if language in ['en-PN']: 	print('language not supported!')
if language in ['en-PR']: 	print('language not supported!')
if language in ['en-PW']: 	print('language not supported!')
if language in ['en-RW']: 	print('language not supported!')
if language in ['en-SB']: 	print('language not supported!')
if language in ['en-SC']: 	print('language not supported!')
if language in ['en-SD']: 	print('language not supported!')
if language in ['en-SE']: 	print('language not supported!')
if language in ['en-SG']: 	print('language not supported!')
if language in ['en-SH']: 	print('language not supported!')
if language in ['en-SI']: 	print('language not supported!')
if language in ['en-SL']: 	print('language not supported!')
if language in ['en-SS']: 	print('language not supported!')
if language in ['en-SX']: 	print('language not supported!')
if language in ['en-SZ']: 	print('language not supported!')
if language in ['en-TC']: 	print('language not supported!')
if language in ['en-TK']: 	print('language not supported!')
if language in ['en-TO']: 	print('language not supported!')
if language in ['en-TT']: 	print('language not supported!')
if language in ['en-TV']: 	print('language not supported!')
if language in ['en-TZ']: 	print('language not supported!')
if language in ['en-UG']: 	print('language not supported!')
if language in ['en-UM']: 	print('language not supported!')
if language in ['en-US']: 	print('language not supported!')
if language in ['en-US-POSIX']: 	print('language not supported!')
if language in ['en-VC']: 	print('language not supported!')
if language in ['en-VG']: 	print('language not supported!')
if language in ['en-VI']: 	print('language not supported!')
if language in ['en-VU']: 	print('language not supported!')
if language in ['en-WS']: 	print('language not supported!')
if language in ['en-ZA']: 	print('language not supported!')
if language in ['en-ZM']: 	print('language not supported!')
if language in ['en-ZW']: 	print('language not supported!')
if language in ['eo']: 	print('language not supported!')
if language in ['eo-001']: 	print('language not supported!')
if language in ['es']: 	print('language not supported!')
if language in ['es-419']: 	print('language not supported!')
if language in ['es-AR']: 	print('language not supported!')
if language in ['es-BO']: 	print('language not supported!')
if language in ['es-BR']: 	print('language not supported!')
if language in ['es-BZ']: 	print('language not supported!')
if language in ['es-CL']: 	print('language not supported!')
if language in ['es-CO']: 	print('language not supported!')
if language in ['es-CR']: 	print('language not supported!')
if language in ['es-CU']: 	print('language not supported!')
if language in ['es-DO']: 	print('language not supported!')
if language in ['es-EA']: 	print('language not supported!')
if language in ['es-EC']: 	print('language not supported!')
if language in ['es-ES']: 	print('language not supported!')
if language in ['es-GQ']: 	print('language not supported!')
if language in ['es-GT']: 	print('language not supported!')
if language in ['es-HN']: 	print('language not supported!')
if language in ['es-IC']: 	print('language not supported!')
if language in ['es-MX']: 	print('language not supported!')
if language in ['es-NI']: 	print('language not supported!')
if language in ['es-PA']: 	print('language not supported!')
if language in ['es-PE']: 	print('language not supported!')
if language in ['es-PH']: 	print('language not supported!')
if language in ['es-PR']: 	print('language not supported!')
if language in ['es-PY']: 	print('language not supported!')
if language in ['es-SV']: 	print('language not supported!')
if language in ['es-US']: 	print('language not supported!')
if language in ['es-UY']: 	print('language not supported!')
if language in ['es-VE']: 	print('language not supported!')
if language in ['et']: 	print('language not supported!')
if language in ['et-EE']: 	print('language not supported!')
if language in ['eu']: 	print('language not supported!')
if language in ['eu-ES']: 	print('language not supported!')
if language in ['ewo']: 	print('language not supported!')
if language in ['ewo-CM']: 	print('language not supported!')
if language in ['fa']: 	print('language not supported!')
if language in ['fa-AF']: 	print('language not supported!')
if language in ['fa-IR']: 	print('language not supported!')
if language in ['ff']: 	print('language not supported!')
if language in ['ff-Latn']: 	print('language not supported!')
if language in ['ff-Latn-BF']: 	print('language not supported!')
if language in ['ff-Latn-CM']: 	print('language not supported!')
if language in ['ff-Latn-GH']: 	print('language not supported!')
if language in ['ff-Latn-GM']: 	print('language not supported!')
if language in ['ff-Latn-GN']: 	print('language not supported!')
if language in ['ff-Latn-GW']: 	print('language not supported!')
if language in ['ff-Latn-LR']: 	print('language not supported!')
if language in ['ff-Latn-MR']: 	print('language not supported!')
if language in ['ff-Latn-NE']: 	print('language not supported!')
if language in ['ff-Latn-NG']: 	print('language not supported!')
if language in ['ff-Latn-SL']: 	print('language not supported!')
if language in ['ff-Latn-SN']: 	print('language not supported!')
if language in ['fi']: 	print('language not supported!')
if language in ['fi-FI']: 	print('language not supported!')
if language in ['fil']: 	print('language not supported!')
if language in ['fil-PH']: 	print('language not supported!')
if language in ['fo']: 	print('language not supported!')
if language in ['fo-DK']: 	print('language not supported!')
if language in ['fo-FO']: 	print('language not supported!')
if language in ['fr']: 	print('language not supported!')
if language in ['fr-BE']: 	print('language not supported!')
if language in ['fr-BF']: 	print('language not supported!')
if language in ['fr-BI']: 	print('language not supported!')
if language in ['fr-BJ']: 	print('language not supported!')
if language in ['fr-BL']: 	print('language not supported!')
if language in ['fr-CA']: 	print('language not supported!')
if language in ['fr-CD']: 	print('language not supported!')
if language in ['fr-CF']: 	print('language not supported!')
if language in ['fr-CG']: 	print('language not supported!')
if language in ['fr-CH']: 	print('language not supported!')
if language in ['fr-CI']: 	print('language not supported!')
if language in ['fr-CM']: 	print('language not supported!')
if language in ['fr-DJ']: 	print('language not supported!')
if language in ['fr-DZ']: 	print('language not supported!')
if language in ['fr-FR']: 	print('language not supported!')
if language in ['fr-GA']: 	print('language not supported!')
if language in ['fr-GF']: 	print('language not supported!')
if language in ['fr-GN']: 	print('language not supported!')
if language in ['fr-GP']: 	print('language not supported!')
if language in ['fr-GQ']: 	print('language not supported!')
if language in ['fr-HT']: 	print('language not supported!')
if language in ['fr-KM']: 	print('language not supported!')
if language in ['fr-LU']: 	print('language not supported!')
if language in ['fr-MA']: 	print('language not supported!')
if language in ['fr-MC']: 	print('language not supported!')
if language in ['fr-MF']: 	print('language not supported!')
if language in ['fr-MG']: 	print('language not supported!')
if language in ['fr-ML']: 	print('language not supported!')
if language in ['fr-MQ']: 	print('language not supported!')
if language in ['fr-MR']: 	print('language not supported!')
if language in ['fr-MU']: 	print('language not supported!')
if language in ['fr-NC']: 	print('language not supported!')
if language in ['fr-NE']: 	print('language not supported!')
if language in ['fr-PF']: 	print('language not supported!')
if language in ['fr-PM']: 	print('language not supported!')
if language in ['fr-RE']: 	print('language not supported!')
if language in ['fr-RW']: 	print('language not supported!')
if language in ['fr-SC']: 	print('language not supported!')
if language in ['fr-SN']: 	print('language not supported!')
if language in ['fr-SY']: 	print('language not supported!')
if language in ['fr-TD']: 	print('language not supported!')
if language in ['fr-TG']: 	print('language not supported!')
if language in ['fr-TN']: 	print('language not supported!')
if language in ['fr-VU']: 	print('language not supported!')
if language in ['fr-WF']: 	print('language not supported!')
if language in ['fr-YT']: 	print('language not supported!')
if language in ['fur']: 	print('language not supported!')
if language in ['fur-IT']: 	print('language not supported!')
if language in ['fy']: 	print('language not supported!')
if language in ['fy-NL']: 	print('language not supported!')
if language in ['ga']: 	print('language not supported!')
if language in ['ga-IE']: 	print('language not supported!')
if language in ['gd']: 	print('language not supported!')
if language in ['gd-GB']: 	print('language not supported!')
if language in ['gl']: 	print('language not supported!')
if language in ['gl-ES']: 	print('language not supported!')
if language in ['gsw']: 	print('language not supported!')
if language in ['gsw-CH']: 	print('language not supported!')
if language in ['gsw-FR']: 	print('language not supported!')
if language in ['gsw-LI']: 	print('language not supported!')
if language in ['gu']: 	print('language not supported!')
if language in ['gu-IN']: 	print('language not supported!')
if language in ['guz']: 	print('language not supported!')
if language in ['guz-KE']: 	print('language not supported!')
if language in ['gv']: 	print('language not supported!')
if language in ['gv-IM']: 	print('language not supported!')
if language in ['ha']: 	print('language not supported!')
if language in ['ha-GH']: 	print('language not supported!')
if language in ['ha-NE']: 	print('language not supported!')
if language in ['ha-NG']: 	print('language not supported!')
if language in ['haw']: 	print('language not supported!')
if language in ['haw-US']: 	print('language not supported!')
if language in ['he']: 	print('language not supported!')
if language in ['he-IL']: 	print('language not supported!')
if language in ['hi']: 	print('language not supported!')
if language in ['hi-IN']: 	print('language not supported!')
if language in ['hr']: 	print('language not supported!')
if language in ['hr-BA']: 	print('language not supported!')
if language in ['hr-HR']: 	print('language not supported!')
if language in ['hsb']: 	print('language not supported!')
if language in ['hsb-DE']: 	print('language not supported!')
if language in ['hu']: 	print('language not supported!')
if language in ['hu-HU']: 	print('language not supported!')
if language in ['hy']: 	print('language not supported!')
if language in ['hy-AM']: 	print('language not supported!')
if language in ['ia']: 	print('language not supported!')
if language in ['ia-001']: 	print('language not supported!')
if language in ['id']: 	print('language not supported!')
if language in ['id-ID']: 	print('language not supported!')
if language in ['ig']: 	print('language not supported!')
if language in ['ig-NG']: 	print('language not supported!')
if language in ['ii']: 	print('language not supported!')
if language in ['ii-CN']: 	print('language not supported!')
if language in ['is']: 	print('language not supported!')
if language in ['is-IS']: 	print('language not supported!')
if language in ['it']: 	print('language not supported!')
if language in ['it-CH']: 	print('language not supported!')
if language in ['it-IT']: 	print('language not supported!')
if language in ['it-SM']: 	print('language not supported!')
if language in ['it-VA']: 	print('language not supported!')
if language in ['ja']: 	print('language not supported!')
if language in ['ja-JP']: 	print('language not supported!')
if language in ['jgo']: 	print('language not supported!')
if language in ['jgo-CM']: 	print('language not supported!')
if language in ['jmc']: 	print('language not supported!')
if language in ['jmc-TZ']: 	print('language not supported!')
if language in ['jv']: 	print('language not supported!')
if language in ['jv-ID']: 	print('language not supported!')
if language in ['ka']: 	print('language not supported!')
if language in ['ka-GE']: 	print('language not supported!')
if language in ['kab']: 	print('language not supported!')
if language in ['kab-DZ']: 	print('language not supported!')
if language in ['kam']: 	print('language not supported!')
if language in ['kam-KE']: 	print('language not supported!')
if language in ['kde']: 	print('language not supported!')
if language in ['kde-TZ']: 	print('language not supported!')
if language in ['kea']: 	print('language not supported!')
if language in ['kea-CV']: 	print('language not supported!')
if language in ['khq']: 	print('language not supported!')
if language in ['khq-ML']: 	print('language not supported!')
if language in ['ki']: 	print('language not supported!')
if language in ['ki-KE']: 	print('language not supported!')
if language in ['kk']: 	print('language not supported!')
if language in ['kk-KZ']: 	print('language not supported!')
if language in ['kkj']: 	print('language not supported!')
if language in ['kkj-CM']: 	print('language not supported!')
if language in ['kl']: 	print('language not supported!')
if language in ['kl-GL']: 	print('language not supported!')
if language in ['kln']: 	print('language not supported!')
if language in ['kln-KE']: 	print('language not supported!')
if language in ['km']: 	print('language not supported!')
if language in ['km-KH']: 	print('language not supported!')
if language in ['kn']: 	print('language not supported!')
if language in ['kn-IN']: 	print('language not supported!')
if language in ['ko']: 	print('language not supported!')
if language in ['ko-KP']: 	print('language not supported!')
if language in ['ko-KR']: 	print('language not supported!')
if language in ['kok']: 	print('language not supported!')
if language in ['kok-IN']: 	print('language not supported!')
if language in ['ks']: 	print('language not supported!')
if language in ['ks-IN']: 	print('language not supported!')
if language in ['ksb']: 	print('language not supported!')
if language in ['ksb-TZ']: 	print('language not supported!')
if language in ['ksf']: 	print('language not supported!')
if language in ['ksf-CM']: 	print('language not supported!')
if language in ['ksh']: 	print('language not supported!')
if language in ['ksh-DE']: 	print('language not supported!')
if language in ['ku']: 	print('language not supported!')
if language in ['ku-TR']: 	print('language not supported!')
if language in ['kw']: 	print('language not supported!')
if language in ['kw-GB']: 	print('language not supported!')
if language in ['ky']: 	print('language not supported!')
if language in ['ky-KG']: 	print('language not supported!')
if language in ['lag']: 	print('language not supported!')
if language in ['lag-TZ']: 	print('language not supported!')
if language in ['lb']: 	print('language not supported!')
if language in ['lb-LU']: 	print('language not supported!')
if language in ['lg']: 	print('language not supported!')
if language in ['lg-UG']: 	print('language not supported!')
if language in ['lkt']: 	print('language not supported!')
if language in ['lkt-US']: 	print('language not supported!')
if language in ['ln']: 	print('language not supported!')
if language in ['ln-AO']: 	print('language not supported!')
if language in ['ln-CD']: 	print('language not supported!')
if language in ['ln-CF']: 	print('language not supported!')
if language in ['ln-CG']: 	print('language not supported!')
if language in ['lo']: 	print('language not supported!')
if language in ['lo-LA']: 	print('language not supported!')
if language in ['lrc']: 	print('language not supported!')
if language in ['lrc-IQ']: 	print('language not supported!')
if language in ['lrc-IR']: 	print('language not supported!')
if language in ['lt']: 	print('language not supported!')
if language in ['lt-LT']: 	print('language not supported!')
if language in ['lu']: 	print('language not supported!')
if language in ['lu-CD']: 	print('language not supported!')
if language in ['luo']: 	print('language not supported!')
if language in ['luo-KE']: 	print('language not supported!')
if language in ['luy']: 	print('language not supported!')
if language in ['luy-KE']: 	print('language not supported!')
if language in ['lv']: 	print('language not supported!')
if language in ['lv-LV']: 	print('language not supported!')
if language in ['mas']: 	print('language not supported!')
if language in ['mas-KE']: 	print('language not supported!')
if language in ['mas-TZ']: 	print('language not supported!')
if language in ['mer']: 	print('language not supported!')
if language in ['mer-KE']: 	print('language not supported!')
if language in ['mfe']: 	print('language not supported!')
if language in ['mfe-MU']: 	print('language not supported!')
if language in ['mg']: 	print('language not supported!')
if language in ['mg-MG']: 	print('language not supported!')
if language in ['mgh']: 	print('language not supported!')
if language in ['mgh-MZ']: 	print('language not supported!')
if language in ['mgo']: 	print('language not supported!')
if language in ['mgo-CM']: 	print('language not supported!')
if language in ['mi']: 	print('language not supported!')
if language in ['mi-NZ']: 	print('language not supported!')
if language in ['mk']: 	print('language not supported!')
if language in ['mk-MK']: 	print('language not supported!')
if language in ['ml']: 	print('language not supported!')
if language in ['ml-IN']: 	print('language not supported!')
if language in ['mn']: 	print('language not supported!')
if language in ['mn-MN']: 	print('language not supported!')
if language in ['mr']: 	print('language not supported!')
if language in ['mr-IN']: 	print('language not supported!')
if language in ['ms']: 	print('language not supported!')
if language in ['ms-BN']: 	print('language not supported!')
if language in ['ms-MY']: 	print('language not supported!')
if language in ['ms-SG']: 	print('language not supported!')
if language in ['mt']: 	print('language not supported!')
if language in ['mt-MT']: 	print('language not supported!')
if language in ['mua']: 	print('language not supported!')
if language in ['mua-CM']: 	print('language not supported!')
if language in ['my']: 	print('language not supported!')
if language in ['my-MM']: 	print('language not supported!')
if language in ['mzn']: 	print('language not supported!')
if language in ['mzn-IR']: 	print('language not supported!')
if language in ['naq']: 	print('language not supported!')
if language in ['naq-NA']: 	print('language not supported!')
if language in ['nb']: 	print('language not supported!')
if language in ['nb-NO']: 	print('language not supported!')
if language in ['nb-SJ']: 	print('language not supported!')
if language in ['nd']: 	print('language not supported!')
if language in ['nd-ZW']: 	print('language not supported!')
if language in ['nds']: 	print('language not supported!')
if language in ['nds-DE']: 	print('language not supported!')
if language in ['nds-NL']: 	print('language not supported!')
if language in ['ne']: 	print('language not supported!')
if language in ['ne-IN']: 	print('language not supported!')
if language in ['ne-NP']: 	print('language not supported!')
if language in ['nl']: 	print('language not supported!')
if language in ['nl-AW']: 	print('language not supported!')
if language in ['nl-BE']: 	print('language not supported!')
if language in ['nl-BQ']: 	print('language not supported!')
if language in ['nl-CW']: 	print('language not supported!')
if language in ['nl-NL']: 	print('language not supported!')
if language in ['nl-SR']: 	print('language not supported!')
if language in ['nl-SX']: 	print('language not supported!')
if language in ['nmg']: 	print('language not supported!')
if language in ['nmg-CM']: 	print('language not supported!')
if language in ['nn']: 	print('language not supported!')
if language in ['nn-NO']: 	print('language not supported!')
if language in ['nnh']: 	print('language not supported!')
if language in ['nnh-CM']: 	print('language not supported!')
if language in ['nus']: 	print('language not supported!')
if language in ['nus-SS']: 	print('language not supported!')
if language in ['nyn']: 	print('language not supported!')
if language in ['nyn-UG']: 	print('language not supported!')
if language in ['om']: 	print('language not supported!')
if language in ['om-ET']: 	print('language not supported!')
if language in ['om-KE']: 	print('language not supported!')
if language in ['or']: 	print('language not supported!')
if language in ['or-IN']: 	print('language not supported!')
if language in ['os']: 	print('language not supported!')
if language in ['os-GE']: 	print('language not supported!')
if language in ['os-RU']: 	print('language not supported!')
if language in ['pa']: 	print('language not supported!')
if language in ['pa-Arab']: 	print('language not supported!')
if language in ['pa-Arab-PK']: 	print('language not supported!')
if language in ['pa-Guru']: 	print('language not supported!')
if language in ['pa-Guru-IN']: 	print('language not supported!')
if language in ['pl']: 	print('language not supported!')
if language in ['pl-PL']: 	print('language not supported!')
if language in ['prg']: 	print('language not supported!')
if language in ['prg-001']: 	print('language not supported!')
if language in ['ps']: 	print('language not supported!')
if language in ['ps-AF']: 	print('language not supported!')
if language in ['pt']: 	print('language not supported!')
if language in ['pt-AO']: 	print('language not supported!')
if language in ['pt-BR']: 	print('language not supported!')
if language in ['pt-CH']: 	print('language not supported!')
if language in ['pt-CV']: 	print('language not supported!')
if language in ['pt-GQ']: 	print('language not supported!')
if language in ['pt-GW']: 	print('language not supported!')
if language in ['pt-LU']: 	print('language not supported!')
if language in ['pt-MO']: 	print('language not supported!')
if language in ['pt-MZ']: 	print('language not supported!')
if language in ['pt-PT']: 	print('language not supported!')
if language in ['pt-ST']: 	print('language not supported!')
if language in ['pt-TL']: 	print('language not supported!')
if language in ['qu']: 	print('language not supported!')
if language in ['qu-BO']: 	print('language not supported!')
if language in ['qu-EC']: 	print('language not supported!')
if language in ['qu-PE']: 	print('language not supported!')
if language in ['rm']: 	print('language not supported!')
if language in ['rm-CH']: 	print('language not supported!')
if language in ['rn']: 	print('language not supported!')
if language in ['rn-BI']: 	print('language not supported!')
if language in ['ro']: 	print('language not supported!')
if language in ['ro-MD']: 	print('language not supported!')
if language in ['ro-RO']: 	print('language not supported!')
if language in ['rof']: 	print('language not supported!')
if language in ['rof-TZ']: 	print('language not supported!')
if language in ['root']: 	print('language not supported!')
if language in ['ru']: 	print('language not supported!')
if language in ['ru-BY']: 	print('language not supported!')
if language in ['ru-KG']: 	print('language not supported!')
if language in ['ru-KZ']: 	print('language not supported!')
if language in ['ru-MD']: 	print('language not supported!')
if language in ['ru-RU']: 	print('language not supported!')
if language in ['ru-UA']: 	print('language not supported!')
if language in ['rw']: 	print('language not supported!')
if language in ['rw-RW']: 	print('language not supported!')
if language in ['rwk']: 	print('language not supported!')
if language in ['rwk-TZ']: 	print('language not supported!')
if language in ['sah']: 	print('language not supported!')
if language in ['sah-RU']: 	print('language not supported!')
if language in ['saq']: 	print('language not supported!')
if language in ['saq-KE']: 	print('language not supported!')
if language in ['sbp']: 	print('language not supported!')
if language in ['sbp-TZ']: 	print('language not supported!')
if language in ['sd']: 	print('language not supported!')
if language in ['sd-PK']: 	print('language not supported!')
if language in ['se']: 	print('language not supported!')
if language in ['se-FI']: 	print('language not supported!')
if language in ['se-NO']: 	print('language not supported!')
if language in ['se-SE']: 	print('language not supported!')
if language in ['seh']: 	print('language not supported!')
if language in ['seh-MZ']: 	print('language not supported!')
if language in ['ses']: 	print('language not supported!')
if language in ['ses-ML']: 	print('language not supported!')
if language in ['sg']: 	print('language not supported!')
if language in ['sg-CF']: 	print('language not supported!')
if language in ['shi']: 	print('language not supported!')
if language in ['shi-Latn']: 	print('language not supported!')
if language in ['shi-Latn-MA']: 	print('language not supported!')
if language in ['shi-Tfng']: 	print('language not supported!')
if language in ['shi-Tfng-MA']: 	print('language not supported!')
if language in ['si']: 	print('language not supported!')
if language in ['si-LK']: 	print('language not supported!')
if language in ['sk']: 	print('language not supported!')
if language in ['sk-SK']: 	print('language not supported!')
if language in ['sl']: 	print('language not supported!')
if language in ['sl-SI']: 	print('language not supported!')
if language in ['smn']: 	print('language not supported!')
if language in ['smn-FI']: 	print('language not supported!')
if language in ['sn']: 	print('language not supported!')
if language in ['sn-ZW']: 	print('language not supported!')
if language in ['so']: 	print('language not supported!')
if language in ['so-DJ']: 	print('language not supported!')
if language in ['so-ET']: 	print('language not supported!')
if language in ['so-KE']: 	print('language not supported!')
if language in ['so-SO']: 	print('language not supported!')
if language in ['sq']: 	print('language not supported!')
if language in ['sq-AL']: 	print('language not supported!')
if language in ['sq-MK']: 	print('language not supported!')
if language in ['sq-XK']: 	print('language not supported!')
if language in ['sr']: 	print('language not supported!')
if language in ['sr-Cyrl']: 	print('language not supported!')
if language in ['sr-Cyrl-BA']: 	print('language not supported!')
if language in ['sr-Cyrl-ME']: 	print('language not supported!')
if language in ['sr-Cyrl-RS']: 	print('language not supported!')
if language in ['sr-Cyrl-XK']: 	print('language not supported!')
if language in ['sr-Latn']: 	print('language not supported!')
if language in ['sr-Latn-BA']: 	print('language not supported!')
if language in ['sr-Latn-ME']: 	print('language not supported!')
if language in ['sr-Latn-RS']: 	print('language not supported!')
if language in ['sr-Latn-XK']: 	print('language not supported!')
if language in ['sv']: 	print('language not supported!')
if language in ['sv-AX']: 	print('language not supported!')
if language in ['sv-FI']: 	print('language not supported!')
if language in ['sv-SE']: 	print('language not supported!')
if language in ['sw']: 	print('language not supported!')
if language in ['sw-CD']: 	print('language not supported!')
if language in ['sw-KE']: 	print('language not supported!')
if language in ['sw-TZ']: 	print('language not supported!')
if language in ['sw-UG']: 	print('language not supported!')
if language in ['ta']: 	print('language not supported!')
if language in ['ta-IN']: 	print('language not supported!')
if language in ['ta-LK']: 	print('language not supported!')
if language in ['ta-MY']: 	print('language not supported!')
if language in ['ta-SG']: 	print('language not supported!')
if language in ['te']: 	print('language not supported!')
if language in ['te-IN']: 	print('language not supported!')
if language in ['teo']: 	print('language not supported!')
if language in ['teo-KE']: 	print('language not supported!')
if language in ['teo-UG']: 	print('language not supported!')
if language in ['tg']: 	print('language not supported!')
if language in ['tg-TJ']: 	print('language not supported!')
if language in ['th']: 	print('language not supported!')
if language in ['th-TH']: 	print('language not supported!')
if language in ['ti']: 	print('language not supported!')
if language in ['ti-ER']: 	print('language not supported!')
if language in ['ti-ET']: 	print('language not supported!')
if language in ['tk']: 	print('language not supported!')
if language in ['tk-TM']: 	print('language not supported!')
if language in ['to']: 	print('language not supported!')
if language in ['to-TO']: 	print('language not supported!')
if language in ['tr']: 	print('language not supported!')
if language in ['tr-CY']: 	print('language not supported!')
if language in ['tr-TR']: 	print('language not supported!')
if language in ['tt']: 	print('language not supported!')
if language in ['tt-RU']: 	print('language not supported!')
if language in ['twq']: 	print('language not supported!')
if language in ['twq-NE']: 	print('language not supported!')
if language in ['tzm']: 	print('language not supported!')
if language in ['tzm-MA']: 	print('language not supported!')
if language in ['ug']: 	print('language not supported!')
if language in ['ug-CN']: 	print('language not supported!')
if language in ['uk']: 	print('language not supported!')
if language in ['uk-UA']: 	print('language not supported!')
if language in ['ur']: 	print('language not supported!')
if language in ['ur-IN']: 	print('language not supported!')
if language in ['ur-PK']: 	print('language not supported!')
if language in ['uz']: 	print('language not supported!')
if language in ['uz-Arab']: 	print('language not supported!')
if language in ['uz-Arab-AF']: 	print('language not supported!')
if language in ['uz-Cyrl']: 	print('language not supported!')
if language in ['uz-Cyrl-UZ']: 	print('language not supported!')
if language in ['uz-Latn']: 	print('language not supported!')
if language in ['uz-Latn-UZ']: 	print('language not supported!')
if language in ['vai']: 	print('language not supported!')
if language in ['vai-Latn']: 	print('language not supported!')
if language in ['vai-Latn-LR']: 	print('language not supported!')
if language in ['vai-Vaii']: 	print('language not supported!')
if language in ['vai-Vaii-LR']: 	print('language not supported!')
if language in ['vi']: 	print('language not supported!')
if language in ['vi-VN']: 	print('language not supported!')
if language in ['vo']: 	print('language not supported!')
if language in ['vo-001']: 	print('language not supported!')
if language in ['vun']: 	print('language not supported!')
if language in ['vun-TZ']: 	print('language not supported!')
if language in ['wae']: 	print('language not supported!')
if language in ['wae-CH']: 	print('language not supported!')
if language in ['wo']: 	print('language not supported!')
if language in ['wo-SN']: 	print('language not supported!')
if language in ['xh']: 	print('language not supported!')
if language in ['xh-ZA']: 	print('language not supported!')
if language in ['xog']: 	print('language not supported!')
if language in ['xog-UG']: 	print('language not supported!')
if language in ['yav']: 	print('language not supported!')
if language in ['yav-CM']: 	print('language not supported!')
if language in ['yi']: 	print('language not supported!')
if language in ['yi-001']: 	print('language not supported!')
if language in ['yo']: 	print('language not supported!')
if language in ['yo-BJ']: 	print('language not supported!')
if language in ['yo-NG']: 	print('language not supported!')
if language in ['yue']: 	print('language not supported!')
if language in ['yue-Hans']: 	print('language not supported!')
if language in ['yue-Hans-CN']: 	print('language not supported!')
if language in ['yue-Hant']: 	print('language not supported!')
if language in ['yue-Hant-HK']: 	print('language not supported!')
if language in ['zgh']: 	print('language not supported!')
if language in ['zgh-MA']: 	print('language not supported!')
if language in ['zh']: 	print('language not supported!')
if language in ['zh-Hans']: 	print('language not supported!')
if language in ['zh-Hans-CN']: 	print('language not supported!')
if language in ['zh-Hans-HK']: 	print('language not supported!')
if language in ['zh-Hans-MO']: 	print('language not supported!')
if language in ['zh-Hans-SG']: 	print('language not supported!')
if language in ['zh-Hant']: 	print('language not supported!')
if language in ['zh-Hant-HK']: 	print('language not supported!')
if language in ['zh-Hant-MO']: 	print('language not supported!')
if language in ['zh-Hant-TW']: 	print('language not supported!')
if language in ['zu']: 	print('language not supported!')
if language in ['zu-ZA']: 	print('language not supported!')
if language in ['']: 	print('language not supported!')

# ask_GUI = input('Do you want to use the Experimental GUI?: ')

# if ask_GUI in ['Yes', 'yes', 'y']:
	# print('Using Experimental GUI!')
	
# if ask_GUI in ['No', 'no', 'n']:
	# print('Not using Experimental GUI!')

#Get input from user
ask_userName = input("Enter your Username [NO SPACES] [Alphanumeric ONLY] : ");
ask_modName = input("Enter mod name [NO SPACES] [Alphanumeric ONLY] : ");
ask_modVersion = input("Enter mod version [NO SPACES] [Alphanumeric ONLY] : ");

ask_Create = input("Do you want to make a new Block or Item? ")
if ask_Create in ['Block', 'block', 'B', 'b']:
	ask_blockName = input("Enter a name for your new block [Alphanumeric ONLY] : ")
	# ask_blockHardness = input("Enter the hardness for your new block: ")
	# try:
		# blockHardness = int(ask_blockHardness)
		# print('valid')
	# except ValueError:
		# print('invalid')
if ask_Create in ['Item', 'item', 'I', 'i']:
	ask_itemName = input("Enter a name for your new item [Alphanumeric ONLY] : ")
# else:
	# print("you have entered something incorrectly");

#FOR TESTING ONLY
# ask_modName = 'testmod'
# ask_userName = 'testuser'
# ask_modVersion = 'testver'
# ask_blockName = 'testblock'
# ask_itemName = 'testitem'
# ask_blockHardness = '5'

def createFolder(directory):
    try:
        if not os.path.exists(directory):
            os.makedirs(directory)
    except OSError:
        print ('Error: Creating directory. ' +  directory)
		
createFolder('./' + ask_modName + '/')

def createResFolder(directory):
    try:
        if not os.path.exists(directory):
            os.makedirs(directory)
    except OSError:
        print ('Error: Creating directory. ' +  directory)
		
createResFolder('./' + ask_modName + '/assets/Items')
createResFolder('./' + ask_modName + '/assets/Blocks')

# def createMainClass(mainClass):
    # try:
        # if not os.path.exists(mainClass):
            # os.makedirs(mainClass)
    # except OSError:
        # print ('Error: Creating Main Classfile. ' +  mainClass)

mainClass = 'mod_' + ask_modName + 'Main'
createMainClass = open(ask_modName + '/mod_' + ask_modName + 'Main.java', 'w')
createMainClass.write('/* GENERATED BY JTRENT238 MOD MAKER */' + '\n');
createMainClass.write('' + '\n')
createMainClass.write('package com.jtrent238.modmaker.mod.' + ask_userName + '.' + ask_modName + ';' + '\n');
createMainClass.write('' + '\n')
if ask_Create in ['Block', 'block', 'B', 'b']:
	createMainClass.write('import com.jtrent238.modmaker.mod.' + ask_userName + '.' + ask_modName + '.' + ask_blockName + ';' + '\n')
	createMainClass.write('' + '\n')
# if ask_Create in ['Item', 'item', 'i']:
	# createMainClass.write('import com.jtrent238.modmaker.mod.' + ask_userName + '.' + ask_modName + '.' + ask_itemName + ';' + '\n');
	# createMainClass.write('' + '\n')
createMainClass.write('import cpw.mods.fml.common.Loader;' + '\n');
createMainClass.write('import cpw.mods.fml.common.Mod;' + '\n');
createMainClass.write('import cpw.mods.fml.common.Mod.EventHandler;' + '\n');
createMainClass.write('import cpw.mods.fml.common.Mod.Instance;' + '\n');
createMainClass.write('import cpw.mods.fml.common.ModContainer;' + '\n');
createMainClass.write('import cpw.mods.fml.common.SidedProxy;' + '\n');
createMainClass.write('import cpw.mods.fml.common.event.FMLInitializationEvent;' + '\n');
createMainClass.write('import cpw.mods.fml.common.event.FMLPostInitializationEvent;' + '\n');
createMainClass.write('import cpw.mods.fml.common.event.FMLPreInitializationEvent;' + '\n');
createMainClass.write('import cpw.mods.fml.common.event.FMLServerStartingEvent;' + '\n');
createMainClass.write('import cpw.mods.fml.common.eventhandler.EventPriority;' + '\n');
createMainClass.write('import cpw.mods.fml.common.network.IGuiHandler;' + '\n');
createMainClass.write('import cpw.mods.fml.common.network.NetworkRegistry;' + '\n');
createMainClass.write('import cpw.mods.fml.common.registry.GameRegistry;' + '\n');
createMainClass.write('import cpw.mods.fml.common.registry.LanguageRegistry;' + '\n');
createMainClass.write('import net.minecraft.block.Block;' + '\n');
createMainClass.write('import net.minecraft.command.ICommandManager;' + '\n');
createMainClass.write('import net.minecraft.creativetab.CreativeTabs;' + '\n');
createMainClass.write('import net.minecraft.entity.player.EntityPlayer;' + '\n');
createMainClass.write('import net.minecraft.init.Items;' + '\n');
createMainClass.write('import net.minecraft.item.Item;' + '\n');
createMainClass.write('import net.minecraft.item.ItemStack;' + '\n');
createMainClass.write('import net.minecraft.server.MinecraftServer;' + '\n');
createMainClass.write('import net.minecraft.util.WeightedRandomChestContent;' + '\n');
createMainClass.write('import net.minecraft.world.World;' + '\n');
createMainClass.write('import net.minecraftforge.client.event.RenderGameOverlayEvent;' + '\n');
createMainClass.write('import net.minecraftforge.common.ChestGenHooks;' + '\n');
createMainClass.write('import net.minecraft.block.Block;' + '\n');
createMainClass.write('import net.minecraft.block.material.Material;' + '\n');
createMainClass.write('' + '\n')
createMainClass.write('' + '\n')
createMainClass.write('	@Mod(modid='+ mainClass + '.MODID, name=' + mainClass + '.MODNAME, version=' + mainClass + '.MODVERSION)' + '\n');
createMainClass.write('	public class ' + mainClass + '{' + '\n');
createMainClass.write('' + '\n')
createMainClass.write("		public static final String MODID = " + '"' + ask_modName + '"' +";"+ "\n");
createMainClass.write("		public static final String MODNAME = " + '"' + ask_modName + '"' +";"+ "\n");
createMainClass.write("		public static final String MODAUTHOR = "  + '"jtrent238, ' + ask_userName + '"' +";"+ "\n");
createMainClass.write("		public static final String MODVERSION = " + '"' + ask_modVersion + '"' +";"+ "\n");
if ask_Create in ['Block', 'block', 'B', 'b']:
	createMainClass.write('' + '\n')
	createMainClass.write("		public static Block " + ask_blockName + ";"+ "\n")
if ask_Create in ['Item', 'item', 'I', 'i']:
	createMainClass.write('' + '\n')
	createMainClass.write("		public static Item " + ask_itemName + ";"+ "\n")
createMainClass.write('' + '\n')
createMainClass.write('	@Mod.EventHandler' + '\n')
createMainClass.write('	public void init(FMLInitializationEvent event) {' + '\n')
if ask_Create in ['Block', 'block', 'B', 'b']:
	# createMainClass.write(ask_blockName + ' = new Block(Material.rock).setBlockName("' + ask_blockName + '").setBlockTextureName("' + ask_blockName + '").setCreativeTab(' + mainClass + '.' + 'tab_' + mainClass + ').setHardness(' + ask_blockHardness + 'F);' + '\n')
	createMainClass.write('' + '\n')
	createMainClass.write('		' + ask_blockName + ' = new ' + ask_blockName + '(Material.rock).setBlockName("' + ask_blockName + '").setBlockTextureName("' + ask_blockName + '").setCreativeTab(''CreativeTabs.tabMisc'');' + '\n')
	# blockClass = ask_blockName
	createBlockClass = open(ask_modName + '/' + ask_blockName + '.java', 'w')
	createBlockClass.write('/* GENERATED BY JTRENT238 MOD MAKER */' + '\n');
	createBlockClass.write('' + '\n')
	createBlockClass.write('package com.jtrent238.modmaker.mod.' + ask_userName + '.' + ask_modName + ';' + '\n');
	createBlockClass.write('' + '\n')
	# createBlockClass.write('import com.jtrent238.modmaker.mod.' + ask_userName + '.' + ask_modName + ';' + '\n')
	createBlockClass.write('' + '\n')
	createBlockClass.write('import cpw.mods.fml.relauncher.Side;' + '\n')
	createBlockClass.write('import cpw.mods.fml.relauncher.SideOnly;' + '\n')
	createBlockClass.write('import net.minecraft.block.Block;' + '\n')
	createBlockClass.write('import net.minecraft.block.material.Material;' + '\n')
	createBlockClass.write('import net.minecraft.entity.player.EntityPlayer;' + '\n')
	createBlockClass.write('import net.minecraft.item.ItemStack;' + '\n')
	createBlockClass.write('import net.minecraft.util.EnumChatFormatting;' + '\n')
	createBlockClass.write('import net.minecraft.util.StatCollector;' + '\n')
	createBlockClass.write('' + '\n')
	createBlockClass.write('public class ' + ask_blockName + ' extends Block{' + '\n')
	createBlockClass.write('' + '\n')
	createBlockClass.write('	public ' + ask_blockName + '(Material p_i45394_1_) {' + '\n')
	createBlockClass.write('		super(p_i45394_1_);' + '\n')
	createBlockClass.write('	}' + '\n')
	createBlockClass.write('' + '\n')
	createBlockClass.write('}' + '\n')
	createBlockClass.close()
	print('Your new block has been created!')
if ask_Create in ['Item', 'item', 'I', 'i']:
	# createMainClass.write(ask_itemName + ' = new Item("' + ask_itemName+ '").setUnlocalizedName("' + ask_itemName + '").setTextureName("' + ask_itemName + '").setCreativeTab(' + mainClass + '.' + 'tab_' + mainClass + ');' + '\n')
	createMainClass.write('' + '\n')
	createMainClass.write('		' + ask_itemName + ' = new Item().setUnlocalizedName("' + ask_itemName + '").setTextureName("' + ask_itemName + '").setCreativeTab(''CreativeTabs.tabMisc'');' + '\n')
	print('Your new item has been created!')
createMainClass.write('' + '\n')
createMainClass.write('	}' + '\n')
# createMainClass.write('public Static CreativeTabs;' + '\n')
# createMainClass.write(mainClass + ' = new CreativeTabs("' + mainClass + '");' + '\n')
# createMainClass.write('public Item getTabIconItem() {' + '\n')
# createMainClass.write('return new ItemStack(Items.diamond).getItem();' + '\n')
# createMainClass.write('}' + '\n')
# createMainClass.write('public boolean hasSearchBar(){' + '\n')
# createMainClass.write('return false;' + '\n')
# createMainClass.write('}' + '\n')
# createMainClass.write('};' + '\n')
createMainClass.write('' + '\n')
createMainClass.write('	@Mod.EventHandler' + '\n')
createMainClass.write('	public void postInit(FMLPostInitializationEvent event) {' + '\n')
if ask_Create in ['Block', 'block', 'b']:
	createMainClass.write('' + '\n')
	createMainClass.write('		GameRegistry.registerBlock(' + ask_blockName + ', "' + ask_blockName + '");' + '\n')
if ask_Create in ['Item', 'item', 'i']:
	createMainClass.write('' + '\n')
	createMainClass.write('		GameRegistry.registerItem(' + ask_itemName + ', ' + ask_itemName + '.getUnlocalizedName().substring(5));' + '\n')
createMainClass.write('' + '\n')
# createMainClass.write('{' + '\n')
createMainClass.write('')
createMainClass.write('	}' + '\n')
# createMainClass.write('}' + '\n')
# createMainClass.write('{' + '\n')
createMainClass.write('')
createMainClass.write("}");
createMainClass.close()

createBuildScript = open(ask_modName + "/build.gradle", "w")
createBuildScript.write('buildscript {' + '\n')
createBuildScript.write('    repositories {' + '\n')
createBuildScript.write('        mavenCentral()' + '\n')
createBuildScript.write('        maven {' + '\n')
createBuildScript.write('            name = "forge"' + '\n')
createBuildScript.write('            url = "http://files.minecraftforge.net/maven"' + '\n')
createBuildScript.write('        }' + '\n')
createBuildScript.write('        maven {' + '\n')
createBuildScript.write('            name = "sonatype"' + '\n')
createBuildScript.write('            url = "https://oss.sonatype.org/content/repositories/snapshots/"' + '\n')
createBuildScript.write('        }' + '\n')
createBuildScript.write('    }' + '\n')
createBuildScript.write('    dependencies {' + '\n')
createBuildScript.write('        classpath ''net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT''' + '\n')
createBuildScript.write('    }' + '\n')
createBuildScript.write('}' + '\n')
createBuildScript.write('' + '\n')
createBuildScript.write('apply plugin: ''forge''' + '\n')
createBuildScript.write('' + '\n')
createBuildScript.write('version = "' + ask_modVersion + '"' + '\n')
createBuildScript.write('group= "com.jtrent238.modmaker.mod.' + ask_modName +'" // http://maven.apache.org/guides/mini/guide-naming-conventions.html' + '\n')
createBuildScript.write('archivesBaseName = "' + ask_modName + '"' + '\n')
createBuildScript.write('' + '\n')
createBuildScript.write('minecraft {' + '\n')
createBuildScript.write('    version = "1.7.10-10.13.4.1448-1.7.10"' + '\n')
createBuildScript.write('    runDir = "eclipse"' + '\n')
createBuildScript.write('}' + '\n')
createBuildScript.write('' + '\n')
createBuildScript.write('dependencies {' + '\n')
createBuildScript.write('    // you may put jars on which you depend on in ./libs' + '\n')
createBuildScript.write('    // or you may define them like so..' + '\n')
createBuildScript.write('    //compile "some.group:artifact:version:classifier"' + '\n')
createBuildScript.write('    //compile "some.group:artifact:version"' + '\n')
createBuildScript.write('      ' + '\n')
createBuildScript.write('    // real examples' + '\n')
createBuildScript.write('    //compile ''com.mod-buildcraft:buildcraft:6.0.8:dev'  '// adds buildcraft to the dev env' + '\n')
createBuildScript.write('    //compile ''com.googlecode.efficient-java-matrix-library:ejml:0.24' '// adds ejml to the dev env' + '\n')
createBuildScript.write('' + '\n')
createBuildScript.write('    // for more info...' + '\n')
createBuildScript.write('    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html' + '\n')
createBuildScript.write('    // http://www.gradle.org/docs/current/userguide/dependency_management.html' + '\n')
createBuildScript.write('' + '\n')
createBuildScript.write('}' + '\n')
createBuildScript.write('' + '\n')
createBuildScript.write('processResources' + '\n')
createBuildScript.write('{' + '\n')
createBuildScript.write('    // this will ensure that this task is redone when the versions change.' + '\n')
createBuildScript.write('    inputs.property "version", project.version' + '\n')
createBuildScript.write('    inputs.property "mcversion", project.minecraft.version' + '\n')
createBuildScript.write('' + '\n')
createBuildScript.write('    // replace stuff in mcmod.info, nothing else' + '\n')
createBuildScript.write('    from(sourceSets.main.resources.srcDirs) {' + '\n')
createBuildScript.write('        include ''mcmod.info''' + '\n')
createBuildScript.write('                ' + '\n')
createBuildScript.write('        // replace version and mcversion' + '\n')
createBuildScript.write('        expand ''version'':project.version, ''mcversion'':project.minecraft.version' + '\n')
createBuildScript.write('    }' + '\n')
createBuildScript.write('        ' + '\n')
createBuildScript.write('    // copy everything else, thats not the mcmod.info' + '\n')
createBuildScript.write('    from(sourceSets.main.resources.srcDirs) {' + '\n')
createBuildScript.write('        exclude ''mcmod.info''' + '\n')
createBuildScript.write('    }' + '\n')
createBuildScript.write('}' + '\n')
createBuildScript.close()

createmcModInfo= open(ask_modName + "/mcmod.info", "w")
createmcModInfo.write('[' + '\n')
createmcModInfo.write('{' + '\n')
createmcModInfo.write('  "modid": "' + ask_modName + '",' + '\n')
createmcModInfo.write('  "name": " + ask_modName + ",' + '\n')
createmcModInfo.write('  "description": "Example placeholder mod.",' + '\n')
createmcModInfo.write('  "version": "${version}",' + '\n')
createmcModInfo.write('  "mcversion": "${mcversion}",' + '\n')
createmcModInfo.write('  "url": "",' + '\n')
createmcModInfo.write('  "updateUrl": "",' + '\n')
createmcModInfo.write('  "authorList": ["jtrent238"],' + ask_userName + '\n')
createmcModInfo.write('  "credits": "Mod made by jtrent238 Mod Maker",' + '\n')
createmcModInfo.write('  "logoFile": "",' + '\n')
createmcModInfo.write('  "screenshots": [],' + '\n')
createmcModInfo.write('  "dependencies": []' + '\n')
createmcModInfo.write('}' + '\n')
createmcModInfo.write(']' + '\n')
createmcModInfo.close()

if language in ['US']:
	createENUSlangFile.open  = open(ask_modName + "/en_US.lang", "w")
	if ask_Create in ['Block', 'block', 'b']:
		createENUSlangFile.write('tile.' + ask_blockName + '.name=' + ask_blockName)
	if ask_Create in ['Item', 'item', 'i']:
		createENUSlangFile.write('item.' + ask_itemName + '.name=' + ask_itemName)
	createENUSlangFile.close()

print("==========================================================================")
print("========WARNING IF YOU RE RUN THIS PROGRAM IT WILL OVERWRITE DATA=========")
print("==========================================================================")

ask_compileMod = input('Do you want to compile your new mod?: ')

mcForgezip = 'forge-1.7.10-10.13.4.1448-1.7.10-src.zip'
url = 'https://files.minecraftforge.net/maven/net/minecraftforge/forge/1.7.10-10.13.4.1448-1.7.10/forge-1.7.10-10.13.4.1448-1.7.10-src.zip'

exists = os.path.isfile('/' + mcForgezip)
if exists:
    print('file already exist skipping download')
else:
    print('Beginning download of Minecraft Forge 10.13.4.1448 for 1.7.10...');
urllib.request.urlretrieve(url, ask_modName + '/' + mcForgezip);
print('Minecraft Forge 10.13.4.1448 for 1.7.10 downloaded!');

def createMCForgeFolder(directory):
    try:
        if not os.path.exists(directory):
            os.makedirs(directory)
    except OSError:
        print ('Error: Creating directory. ' +  directory)

createMCForgeFolder(ask_modName + '/MinecraftForge/')

mcForgezip = zipfile.ZipFile(ask_modName + '/' + mcForgezip)
mcForgezip.extractall(ask_modName + '/MinecraftForge/')
 
mcForgezip.close()

ask_assets = input('Do you have any textures?: ')

if ask_assets in ['Yes', 'yes', 'y']:
	if ask_Create in ['Block', 'block', 'b']:
		print('Place them in the "assets/Blocks" folder with the name ' + ask_blockName + '.png')
	if ask_Create in ['Item', 'item', 'i']:
		print('Place them in the "assets/Items" folder with the name ' + ask_itemName+ '.png')

if ask_assets in ['No', 'no', 'n']:
	print('You said you did not have any assets... NOT adding them to the mod.')

def createMCForgeSrcFolder(directory):
    try:
        if not os.path.exists(directory):
            os.makedirs(directory)
    except OSError:
        print ('Error: Creating directory. ' +  directory)

createMCForgeSrcFolder(ask_modName + '/MinecraftForge/src/main/java/com/jtrent238/modmaker/mod')
createMCForgeSrcFolder(ask_modName + '/MinecraftForge/src/main/resources/assets/minecraft/textures/blocks')
createMCForgeSrcFolder(ask_modName + '/MinecraftForge/src/main/resources/assets/minecraft/textures/items')

copy(ask_modName + '/' + mainClass + '.java', ask_modName + '/MinecraftForge/src/main/java/com/jtrent238/modmaker/mod')	
if ask_Create in ['Block', 'block', 'b']:
	copy(ask_modName + '/' + ask_blockName + '.java', ask_modName + '/MinecraftForge/src/main/java/com/jtrent238/modmaker/mod')	
# copy(ask_modName + '/build.gradle', ask_modName + '/MinecraftForge')
copy(ask_modName + '/mcmod.info', ask_modName + '/MinecraftForge/src/main/resources/')

if ask_assets in ['Yes', 'yes', 'y']:
	if ask_Create in ['Block', 'block', 'b']:
		copy(ask_modName + '/assets/blocks/' + ask_blockName + '.png', ask_modName + '/MinecraftForge/src/main/resources/assets/minecraft/textures/blocks')	
	if ask_Create in ['Item', 'item', 'i']:
		copy(ask_modName + '/assets/items/' + ask_itemName + '.png', ask_modName + '/MinecraftForge/src/main/resources/assets/minecraft/textures/items')	

ask_delExample = input('Do you want to delete the example files provided by Forge?: ')

if ask_delExample in ['Yes', 'yes', 'y']:
	print('You choose to delete the sample files!')
	os.remove(ask_modName + "/MinecraftForge/src/main/java/com/example")
	os.remove(ask_modName + "/MinecraftForge/src/main/resources/mcmod.info")
if ask_delExample in ['No', 'no', 'n']:
	print('You chose not to delete the sample files!')

print('Setting up workspace...')

setupWorkspaceScript = open('setupWorkspaceScript.bat', 'w')
setupWorkspaceScript.write('@echo off' + '\n')
setupWorkspaceScript.write('cls' + '\n')
setupWorkspaceScript.write('cd ' + ask_modName + '\MinecraftForge/' + '\n')
setupWorkspaceScript.write('gradlew setupdecompworkspace' + '\n')
setupWorkspaceScript.close()
	
if ask_compileMod in ['Yes', 'yes', 'y']:
	print('Compileing Mod...')
	
	cleanCacheScript = open('cleanCacheScript.bat', 'w')
	cleanCacheScript.write('@echo off' + '\n')
	cleanCacheScript.write('cls' + '\n')
	cleanCacheScript.write('cd ' + ask_modName + '\MinecraftForge/' + '\n')
	cleanCacheScript.write('gradlew cleancache' + '\n')
	# cleanCacheScript.write('timeout /t 2' + '\n')
	# cleanCacheScript.write('gradlew setupdecompworkspace' + '\n')
	# cleanCacheScript.write('gradlew build' + '\n')
	cleanCacheScript.close()
	# compileScript.write('gradlew eclipse')
	# compileScript.write('gradlew idea')
	# os.system('cd ' + ask_modName + '/' + 'MinecraftForge/') 
	os.system('cd ' + ask_modName)  
	# os.system('dir')  
	
	# os.system('start cleanCacheScript.bat')  
	
	compileScript = open('compileScript.bat', 'w')
	compileScript.write('@echo off' + '\n')
	compileScript.write('cls' + '\n')
	compileScript.write('cd ' + ask_modName + '\MinecraftForge/' + '\n')
	# compileScript.write('gradlew cleancache' + '\n')
	# compileScript.write('timeout /t 2' + '\n')
	# compileScript.write('gradlew setupdecompworkspace' + '\n')
	compileScript.write('gradlew build' + '\n')
	compileScript.close()
	# compileScript.write('gradlew eclipse')
	# compileScript.write('gradlew idea')
	# os.system('cd ' + ask_modName + '/' + 'MinecraftForge/') 
	os.system('cd ' + ask_modName)  
	# os.system('dir')  
	
	os.system('start compileScript.bat')  
	# os.system('gradlew setupdecompworkspace') 
	# os.system('gradlew eclipse') 
	# os.system('gradlew idea') 
	# os.system('gradlew build') 
	# print('Mod compiled')
	ask_testMod = input('do you want to test your new mod?: ')
	if ask_testMod in ['Yes', 'yes', 'y']:
		print('testingyes')
		runScript = open('runScript.bat', 'w')
		runScript.write('@echo off' + '\n')
		runScript.write('cls' + '\n')
		runScript.write('cd ' + ask_modName + '\MinecraftForge/' + '\n')
		runScript.write('gradlew runclient' + '\n')
		runScript.close()
		# os.system('gradlew runClient') 
		# os.system('cd ' + ask_modName)  
		os.system('cd ' + ask_modName)  
		# os.system('dir')  
	
		os.system('start runScript.bat')   
	if ask_testMod in ['No', 'no', 'n']:
		print('testingno')
	
if ask_compileMod in ['No', 'no', 'n']:
	print('Mod is complete')

ask_cleanup = input('Do you want to clean up the build scripts?: ')

if ask_cleanup in ['Yes', 'yes', 'y']:
	print('Cleaning up some Junk')
	os.remove('compileScript.bat')
	os.remove('runScript.bat')
	os.remove('cleanCacheScript.bat')
if ask_cleanup in ['No', 'no', 'n']:
	print('Will NOT clean any files')
